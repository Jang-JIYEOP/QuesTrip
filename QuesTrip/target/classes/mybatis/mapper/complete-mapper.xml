<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CompleteMapper">


	<select id="listAll" resultType="integer">
		SELECT COUNT(*) 
		FROM COM_QUEST
		WHERE STATE = '1'
	</select>
	
	<select id="list" resultType="com.kh.questrip.complete.vo.CompleteVo">
		SELECT

			    CQ.NO
			    
			FROM
			    COM_QUEST CQ
			LEFT JOIN
			    MEMBER M ON CQ.MEMBER_NO = M.NO
			LEFT JOIN
			    QUEST Q ON CQ.QUEST_NO = Q.NO
			JOIN
			    QUEST_CATEGORY QC ON Q.QUE_CATE_NO = QC.NO
			WHERE
			    CQ.MEMBER_NO = #{memberNo}
			    AND CQ.STATE = #{state}
			
	</select>
	<select id="pageList" resultType="com.kh.questrip.complete.vo.CompleteVo">
	        SELECT
	        	CQ.NO,
			    CQ.MEMBER_NO,
			    M.NICK AS MEMBER_NAME,
			    CQ.QUEST_NO,
			    Q.TITLE AS QUEST_NAME,
			    CQ.RATE,
			    CQ.IMG_PATH,
			    TO_CHAR(CQ.COM_TIME, 'YYYY/MM/DD HH24:MI') AS COM_TIME,
			    Q.CONTENT,
			    Q.POINT
			FROM
			    COM_QUEST CQ
			JOIN
			    MEMBER M ON CQ.MEMBER_NO = M.NO
			JOIN
			    QUEST Q ON CQ.QUEST_NO = Q.NO
			WHERE STATE = '1'
	    OFFSET #{pageNo} ROWS FETCH NEXT #{limit} ROWS ONLY
	</select>
	
	<update id="update">
		UPDATE COM_QUEST
		SET 
			STATE = #{state}
			, REJEC_REASON = #{rejecReason}
		WHERE NO = #{no}
	</update>
	
	<select id="myList" resultType="com.kh.questrip.complete.vo.CompleteVo">
	        SELECT
			    M.NICK AS MEMBER_NAME,
			    CQ.NO,
			    CQ.MEMBER_NO,
			    QC.NAME AS CATEGORY_NAME,
			    CQ.QUEST_NO,
			    CQ.RATE,
			    CQ.IMG_PATH,
			    CQ.COM_TIME,
			    CQ.STATE,
			    CQ.REJEC_REASON,
			    Q.QUE_CATE_NO,
			    Q.LOC_CATE_NO,
			    Q.TITLE,
			    Q.CONTENT,
			    Q.POINT,
			    TO_CHAR(Q.ENROLL_DATE, 'YYYY/MM/DD HH24:MI') AS ENROLL_DATE,
			    Q.IMG_PATH,
			    Q.LATITUDE,
			    Q.LONGITUDE,
			    Q.DEL_YN,
			    Q.HEAD_CNT,
			    ROUND(AVG(CQ.RATE), 2) AS RATING
			FROM
			    COM_QUEST CQ
			LEFT JOIN
			    MEMBER M ON CQ.MEMBER_NO = M.NO
			LEFT JOIN
			    QUEST Q ON CQ.QUEST_NO = Q.NO
			JOIN
			    QUEST_CATEGORY QC ON Q.QUE_CATE_NO = QC.NO
			WHERE
			    CQ.MEMBER_NO = #{memberNo}
			    AND CQ.STATE = #{state}
			GROUP BY
			    M.NICK,
			    CQ.NO,
			    CQ.MEMBER_NO,
			    QC.NAME,
			    CQ.QUEST_NO,
			    CQ.RATE,
			    CQ.IMG_PATH,
			    CQ.COM_TIME,
			    CQ.STATE,
			    CQ.REJEC_REASON,
			    Q.QUE_CATE_NO,
			    Q.LOC_CATE_NO,
			    Q.TITLE,
			    Q.CONTENT,
			    Q.POINT,
			    Q.ENROLL_DATE,
			    Q.IMG_PATH,
			    Q.LATITUDE,
			    Q.LONGITUDE,
			    Q.DEL_YN,
			    Q.HEAD_CNT
			    OFFSET #{pageNo} ROWS FETCH NEXT #{limit} ROWS ONLY
	</select>
	
	<update id="updatePoint">
        UPDATE member
            SET POINT = POINT + #{point},
                ACCUMULATE = ACCUMULATE + #{point}
        WHERE NO = #{memberNo}
    </update>
    
    <update id="updateTitle">
        UPDATE member m
        SET m.MEMBER_TITLE_NO = (
            SELECT MAX(mt1.NO)
            FROM member m1
            JOIN member_title mt1 ON m1.ACCUMULATE >= mt1.POINT
            WHERE m1.NO = m.NO
        )
        WHERE m.NO = #{memberNo}
    </update>
    
     <insert id="pointInsert">
        INSERT INTO POINT (
            NO
            , MEMBER_NO
            , GET_POINT
            , EOE
            , SOURCE
            , CHANGES) 
        VALUES (
            SEQ_POINT_NO.NEXTVAL
            , #{memberNo}
            , #{point}
            , 'C'
            , #{questName}
            , (SELECT POINT
                FROM MEMBER
                WHERE NO = #{memberNo})
        )
    </insert>
</mapper>

