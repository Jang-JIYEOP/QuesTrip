<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="DiaryMapper">

  <insert id="write">
	  INSERT INTO DIARY
	  (
	    NO,
	    MEMBER_NO,
	    TITLE,
	    CONTENT,
	    ENROLL_DATE
	  )
	  VALUES
	  (
	    SEQ_DIARY_NO.NEXTVAL
	    , #{memberNo}
	    , #{title}
	    , #{content}
	    , SYSDATE
	  )
	</insert>
  
  <update id="delete">
  	 UPDATE DIARY
  	 	SET
  	 		DEL_YN = 'Y'
  	 	WHERE NO = #{no}
  </update>
  
  <select id="list" resultType="Integer">
  	SELECT
	    COUNT(NO) AS CNT
	FROM 
	    DIARY
	WHERE 
	    DEL_YN = 'N'
  </select>
  
  <select id="best" resultType="com.kh.questrip.diary.vo.DiaryVo">
  	SELECT 
	    CB.NO, 
	    CB.MEMBER_NO, 
	    CB.TITLE, 
	    CB.CONTENT,
	    M.NICK,
	    CB.ENROLL_DATE, 
	    CB.HIT, 
	    CB.DEL_YN,
	    COUNT(CL.MEMBER_NO) AS LIKES_COUNT  -- 좋아요 수 추가
	FROM 
	    DIARY CB
	JOIN
	    MEMBER M ON CB.MEMBER_NO = M.NO
	LEFT JOIN
	    DIARY_LIKE CL ON CB.NO = CL.DIARY_NO -- 좋아요 테이블 조인
	WHERE 
	    CB.ENROLL_DATE BETWEEN SYSDATE - 1 AND SYSDATE 
	    AND CB.DEL_YN = 'N' -- DEL_YN이 'N'인 데이터만 필터링
	GROUP BY 
	    CB.NO, 
	    CB.MEMBER_NO, 
	    CB.TITLE, 
	    CB.CONTENT,
	    M.NICK,
	    CB.ENROLL_DATE, 
	    CB.HIT, 
	    CB.DEL_YN
	ORDER BY 
	    LIKES_COUNT DESC
	FETCH FIRST 3 ROWS ONLY
  </select>
  
  <select id="detail" resultType="com.kh.questrip.diary.vo.DiaryDetailVo">
  	SELECT
	    CB.NO,
	    M.NICK,
	    CB.TITLE,
	    CB.CONTENT,
	    CB.ENROLL_DATE,
	    CB.HIT,
	    CB.DEL_YN,
	    CB.MEMBER_NO,
<!-- 	    COUNT(DISTINCT CMT.NO) AS COMMENT_COUNT, -->
	    COUNT(DISTINCT CL.MEMBER_NO) AS LIKES_COUNT
	FROM 
	    DIARY CB
	JOIN 
	    MEMBER M ON CB.MEMBER_NO = M.NO
	
	LEFT JOIN
	    DIARY_LIKE CL ON CB.NO = CL.DIARY_NO 
	WHERE 
	    CB.DEL_YN = 'N' AND CB.NO = #{no}
	GROUP BY 
	    CB.NO,
	    M.NICK,
	    CB.TITLE,
	    CB.CONTENT,
	    CB.ENROLL_DATE,
	    CB.HIT,
	    CB.DEL_YN,
	    CB.MEMBER_NO
	ORDER BY 
	    CB.NO DESC
  </select>
  
  <update id="increaseHit">
  	UPDATE DIARY
  		SET
  			HIT = HIT + 1
  		WHERE NO = #{no}
  </update>
  
  <select id="checkIfAlreadyLiked" resultType="java.lang.Boolean" parameterType="java.util.Map">
        SELECT COUNT(*) 
        FROM DIARY_LIKE 
        WHERE MEMBER_NO = #{memberNo} AND DIARY_NO = #{diaryNo}
   </select>
  
  
  <insert id="increaseLikes">
    INSERT INTO DIARY_LIKE 
    (
    	MEMBER_NO, 
    	DIARY_NO
    )
    VALUES 
    (
    	#{memberNo}, 
    	#{diaryNo}
    )
  </insert>
  
  <delete id="decreaseLikes">
  	Delete
  		FROM DIARY_LIKE
  		WHERE MEMBER_NO = #{memberNo} AND DIARY_NO = #{diaryNo}
  </delete>
  
  <select id="pageList" resultType="com.kh.questrip.diary.vo.DiaryVo">
  	SELECT
	    CB.NO,
	    M.NICK,
	    CB.TITLE,
	    CB.CONTENT,
	    CB.ENROLL_DATE,
	    CB.HIT,
	    CB.DEL_YN,
	    CB.MEMBER_NO,
	    COUNT(CL.MEMBER_NO) AS LIKES_COUNT  -- 좋아요 수 추가
	    
	FROM 
	    DIARY CB
	JOIN 
	    MEMBER M ON CB.MEMBER_NO = M.NO
	LEFT JOIN
	    DIARY_LIKE CL ON CB.NO = CL.DIARY_NO -- 좋아요 테이블 조인
	WHERE 
	    CB.DEL_YN = 'N'
	GROUP BY 
	    CB.NO,
	    M.NICK,
	    CB.TITLE,
	    CB.CONTENT,
	    CB.ENROLL_DATE,
	    CB.HIT,
	    CB.DEL_YN,
	    CB.MEMBER_NO
	ORDER BY 
	    CB.NO DESC
	    OFFSET #{pageNo} ROWS FETCH NEXT #{limit} ROWS ONLY
  </select>
  
  <select id="listAll" resultType="com.kh.questrip.diary.vo.DiaryVo">
  	SELECT
  		NO
		,MEMBER_NO
		,TITLE
		,CONTENT
		,ENROLL_DATE
		,HIT
		,DEL_YN
	FROM DIARY
  </select>
  
  <select id="pageListDiary" resultType="com.kh.questrip.diary.vo.DiaryVo">
  	SELECT
	    CB.NO,
	    M.NICK,
	    CB.TITLE,
	    CB.CONTENT,
	    CB.ENROLL_DATE,
	    CB.HIT,
	    CB.DEL_YN,
	    CB.MEMBER_NO,
	    COUNT(CL.MEMBER_NO) AS LIKES_COUNT  -- 좋아요 수 추가
	    
	FROM 
	    DIARY CB
	JOIN 
	    MEMBER M ON CB.MEMBER_NO = M.NO
	LEFT JOIN
	    DIARY_LIKE CL ON CB.NO = CL.DIARY_NO -- 좋아요 테이블 조인
	WHERE 
	    CB.DEL_YN = 'N'
	    AND CB.MEMBER_NO = #{memberNo}
	GROUP BY 
	    CB.NO,
	    M.NICK,
	    CB.TITLE,
	    CB.CONTENT,
	    CB.ENROLL_DATE,
	    CB.HIT,
	    CB.DEL_YN,
	    CB.MEMBER_NO
	ORDER BY 
	    CB.NO DESC
	    OFFSET #{pageNo} ROWS FETCH NEXT #{limit} ROWS ONLY
  </select>
  
    <select id="search" resultType="com.kh.questrip.diary.vo.DiaryVo">
  	SELECT
	    CB.NO,
	    M.NICK,
	    CB.TITLE,
	    CB.CONTENT,
	    CB.ENROLL_DATE,
	    CB.HIT,
	    CB.DEL_YN,
	    CB.MEMBER_NO,
	    COUNT(CL.MEMBER_NO) AS LIKES_COUNT  -- 좋아요 수 추가
	    
	FROM 
	    DIARY CB
	JOIN 
	    MEMBER M ON CB.MEMBER_NO = M.NO
	LEFT JOIN
	    DIARY_LIKE CL ON CB.NO = CL.DIARY_NO -- 좋아요 테이블 조인
	WHERE 
	    CB.DEL_YN = 'N'
	    <if test="search == 'title'">
            AND CB.TITLE LIKE CONCAT('%', #{searchContent}, '%')
        </if>
        <if test="search == 'content'">
            AND CB.CONTENT LIKE CONCAT('%', #{searchContent}, '%')
        </if>
        <if test="search == 'writer'">
            AND CB.MEMBER_NO = (SELECT NO
            					FROM MEMBER
            					WHERE NICK = #{searchContent})
        </if>
	GROUP BY 
	    CB.NO,
	    M.NICK,
	    CB.TITLE,
	    CB.CONTENT,
	    CB.ENROLL_DATE,
	    CB.HIT,
	    CB.DEL_YN,
	    CB.MEMBER_NO
	ORDER BY 
	    CB.NO DESC
	    OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY
  </select>
  
  
</mapper>